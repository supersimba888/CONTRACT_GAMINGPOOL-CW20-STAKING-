{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "anyOf": [
    {
      "description": "Administrative function for Vesting and transfer of Tokens",
      "type": "object",
      "required": [
        "periodically_transfer_to_categories"
      ],
      "properties": {
        "periodically_transfer_to_categories": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Administrative function for Vesting of Tokens that can be claimed subsequently by beneficiary",
      "type": "object",
      "required": [
        "periodically_calculate_vesting"
      ],
      "properties": {
        "periodically_calculate_vesting": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Beneficiary can call this function to claim Vested Tokens",
      "type": "object",
      "required": [
        "claim_vested_tokens"
      ],
      "properties": {
        "claim_vested_tokens": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Administrative function to add new vesting schedule",
      "type": "object",
      "required": [
        "add_vesting_schedules"
      ],
      "properties": {
        "add_vesting_schedules": {
          "type": "object",
          "required": [
            "schedules"
          ],
          "properties": {
            "schedules": {
              "$ref": "#/definitions/InstantiateVestingSchedulesInfo"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "InstantiateVestingSchedulesInfo": {
      "type": "object",
      "required": [
        "vesting_schedules"
      ],
      "properties": {
        "vesting_schedules": {
          "description": "Array of individual vesting schedules applicable to some category",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VestingSchedule"
          }
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VestingSchedule": {
      "type": "object",
      "required": [
        "address",
        "cliff_period",
        "initial_vesting_count",
        "should_transfer",
        "total_vesting_token_count",
        "vesting_count_per_period",
        "vesting_periodicity"
      ],
      "properties": {
        "address": {
          "description": "Wallet address of the account.",
          "type": "string"
        },
        "cliff_period": {
          "description": "Cliff period in weeks",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "initial_vesting_count": {
          "description": "Amount of tokens allocated at the start of vesting.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "parent_category_address": {
          "description": "Address of the parent category to which this account is investing into",
          "type": [
            "string",
            "null"
          ]
        },
        "should_transfer": {
          "description": "Flag to let system know if the vested amount has to be transferred immediately Or should be kept in allowances for the vester to claim",
          "type": "boolean"
        },
        "total_vesting_token_count": {
          "description": "Total tokens to be awarded to the address",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "vesting_count_per_period": {
          "description": "Amount of tokens to be awarded in every vesting cycle",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "vesting_periodicity": {
          "description": "How often the vesting should occur. This is expressed in seconds",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    }
  }
}
